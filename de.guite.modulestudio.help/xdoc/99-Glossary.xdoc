chapter:Glossary[Glossary]

section:GlossaryAC[A-C]

table[
    tr[
        td[Term]
        td[Description]
    ]
    tr[
        td[Abstract syntax]
        td[Technology independent part of a domain-specific language, represented by meta models.]
    ]
    tr[
        td[AC-MDSD]
        td[Architecture-Centric MDSD: a specialisation of MDSD, often used for the domain „software architecture“. Covers a domain beginning from the solution space by utilising reference implementations.]
    ]
    tr[
        td[Agile Software Development]
        td[A principle for managing the development process with agile technologies.]
    ]
    tr[
        td[AOP]
        td[Aspect-Oriented Software Programming]
    ]
    tr[
        td[AOSD]
        td[Aspect-Oriented Software Development]
    ]
    tr[
        td[API]
        td[Application Programming Interface]
    ]
    tr[
        td[Architecture-Centric MDSD]
        td[See AC-MDSD.]
    ]
    tr[
        td[Aspect-Oriented Software Development]
        td[Development paradigm increasing maintainability of complex system by separated treatment of cross-cutting concerns with aspects.]
    ]
    tr[
        td[BNF]
        td[Backus–Naur Form]
    ]
    tr[
        td[Business use case]
        td[Function for integration of object-specific business logic into an overall system.]
    ]
    tr[
        td[Cartridge]
        td[Modularised generator component which executes a specific task and can be flexibly combined with other components.]
    ]
    tr[
        td[Cascaded MDSD]
        td[Enhancement of AC-MDSD for separation of different generators into modular cartridges. In this context a cascading defines a sequential combination of several cartridges.]
    ]
    tr[
        td[CCC]
        td[See Cross-Cutting Concern.]
    ]
    tr[
        td[Cheatsheet]
        td[Integrated tutorial with interaction elements for an extended user support.]
    ]
    tr[
        td[CMOF]
        td[Complete MOF]
    ]
    tr[
        td[Concrete syntax]
        td[Textual, structural, graphical or hybrid notations of a domain-specific language. Serves for describing applications in the form of models by the user.]
    ]
    tr[
        td[Constraint]
        td[Rule-like definition in context of a meta class. Serves for validation of models which are based on the corresponding meta model.]
    ]
    tr[
        td[Cross-Cutting Concern]
        td[A function representing a separatable aspect whose implementation affects multiple program parts. A typical example is the logging of errors.]
    ]
    tr[
        td[CSS]
        td[Cascading Style Sheets]
    ]
    tr[
        td[CVS]
        td[Concurrent Version System]
    ]
]

section:GlossaryDF[D-F]

table[
    tr[
        td[Term]
        td[Description]
    ]
    tr[
        td[Doctrine]
        td[An ORM layer for PHP, represents the interface between objects in an application and the relational data storage behind it.]
    ]
    tr[
        td[Domain]
        td[A limited area of knowledge or interest, represents a problem space from the real world in most cases.]
    ]
    tr[
        td[Domain analysis]
        td[Process within the meta modeling, cares for finding commonalities and differences between different members of a software system family.]
    ]
    tr[
        td[Domain architecture]
        td[From the area of product line engineering, marks the sum of a domain-specific language and the platform on which the applications realised with it are executed.]
    ]
    tr[
        td[Domain Specific Language]
        td[A language offering precise means for expression for a domain. Contains an abstract syntax as well as concrete notations and transformations for further processing of created models.]
    ]
    tr[
        td[DSL]
        td[Domain Specific Language]
    ]
    tr[
        td[Eclipse Modeling Framework]
        td[Flexible and powerful framework for Ecore-based meta modeling.]
    ]
    tr[
        td[Ecore]
        td[Meta meta model implemented in the Eclipse Modeling Framework, compatible to the Meta Object Facility.]
    ]
    tr[
        td[EJB]
        td[Enterprise Java Beans]
    ]
    tr[
        td[EMF]
        td[Eclipse Modeling Framework]
    ]
    tr[
        td[EMOF]
        td[Essential MOF]
    ]
    tr[
        td[Framework]
        td[Collection of libraries and functions providing a well-defined frame for implementations of a programming language.]
    ]
    tr[
        td[Function point analysis]
        td[Procedure for measuring the functional complexity of a software system.]
    ]
]

section:GlossaryGL[G-L]

table[
    tr[
        td[Term]
        td[Description]
    ]
    tr[
        td[Generative software architecture]
        td[Specialisation of a domain architecture for encapsulating technical implementation details in the context of architecture-centric MDSD.]
    ]
    tr[
        td[GEF]
        td[Graphical Editing Framework]
    ]
    tr[
        td[GMF]
        td[Graphical Modeling Framework]
    ]
    tr[
        td[GMT]
        td[Generative Model Transformer]
    ]
    tr[
        td[Graphical Editing Framework]
        td[Eclipse-based framework for the realisation of concrete notations in the form of graphical editors.]
    ]
    tr[
        td[Graphical Modeling Framework]
        td[Generative bridge between the Eclipse Modeling Framework and the Graphical Editing Framework. Creates graphical editors based on Ecore-based meta models.]
    ]
    tr[
        td[GUI]
        td[Graphical User Interface]
    ]
    tr[
        td[Hook]
        td[Special form of a Zikula application, enriches other components by additional functionality.]
    ]
    tr[
        td[HTML]
        td[Hypertext Markup Language]
    ]
    tr[
        td[IDE]
        td[Integrated Development Environment]
    ]
    tr[
        td[Interceptor]
        td[Special method in PHP which is called automatically on certain events.]
    ]
    tr[
        td[JET]
        td[Java Emitter Templates]
    ]
    tr[
        td[JSF]
        td[Java Server Faces]
    ]
    tr[
        td[JSP]
        td[Java Server Pages]
    ]
]

section:GlossaryMN[M-N]

table[
    tr[
        td[Term]
        td[Description]
    ]
    tr[
        td[M2M]
        td[Model-to-Model]
    ]
    tr[
        td[M2T]
        td[Model-to-Text]
    ]
    tr[
        td[MDA]
        td[See Model-Driven Architecture]
    ]
    tr[
        td[MDD]
        td[Model-Driven Development]
    ]
    tr[
        td[MDSD]
        td[See Model-Driven Software Development]
    ]
    tr[
        td[Meta class]
        td[Instance of a meta model element in the form of a generated class.]
    ]
    tr[
        td[Meta meta model]
        td[Defines possible elements and relations for meta models.]
    ]
    tr[
        td[Meta model]
        td[Abstract syntax of a domain-specific language. Is created based on a meta meta model in the meta modeling process.]
    ]
    tr[
        td[Meta modeling]
        td[Abstract definition of the core concepts of a domain in the form of meta models. Based on findouts in the domain analysis.]
    ]
    tr[
        td[Meta Object Facility]
        td[Standard for meta meta models, adopted by the Object Management Group.]
    ]
    tr[
        td[Model]
        td[A simplifying presentation of structures, functionalities and progress forms. Represents an application in the model-driven software development which is described in an abstract form.]
    ]
    tr[
        td[Model-Based]
        td[In model-based systems models are the „base“ for an application. They serve for documentation and basis for generating a program skeleton.]
    ]
    tr[
        td[Model-Driven]
        td[Model-driven systems use domain-specific languages in order to be able to create software completely from models.]
    ]
    tr[
        td[Model-Driven Architecture]
        td[Standard for the realisation of software systems with a separation of technology independent and dependent parts, defined by the Object Management Group.]
    ]
    tr[
        td[Model-Driven Software Development]
        td[Pragmatic development paradigm for generation of software from models. See also model-driven.]
    ]
    tr[
        td[Module]
        td[The module \[moˈduːle\] is a building block, in general a part of a bigger system. In informatics it stands for a unit which is assembled by multiple elements and can be exchanged at any time.]
    ]
    tr[
        td[MOF]
        td[See Meta Object Facility]
    ]
    tr[
        td[MVC]
        td[Model View Controller]
    ]
    tr[
        td[MWE]
        td[Model Workflow Engine]
    ]
]

section:GlossaryOR[O-R]

table[
    tr[
        td[Term]
        td[Description]
    ]
    tr[
        td[Object Constraint Language]
        td[Standard language for the definition of constraints, adapted by the Object Management Group.]
    ]
    tr[
        td[Object Management Group]
        td[Consortium developing different standards for improving interoperability, beside others MDA, UML, Object Constraint Language and Query / View / Transition.]
    ]
    tr[
        td[OCL]
        td[See Object Constraint Language]
    ]
    tr[
        td[OMG]
        td[See Object Management Group]
    ]
    tr[
        td[ORM]
        td[Object-Relational Mapping]
    ]
    tr[
        td[PDE]
        td[Plugin Development Environment]
    ]
    tr[
        td[PDF]
        td[Portable Document Format]
    ]
    tr[
        td[PHP]
        td[PHP Hypertext Processor]
    ]
    tr[
        td[PIM]
        td[Platform-Independent Model]
    ]
    tr[
        td[PLE]
        td[See Product Line Engineering]
    ]
    tr[
        td[Pointcuts]
        td[Program code parts where aspects can embed the handling of cross-cutting concerns.]
    ]
    tr[
        td[Product line]
        td[A software system family in the context of product line engineering.]
    ]
    tr[
        td[Product Line Engineering]
        td[A principle comparing software development with industrial production processes and aiming on according automations.]
    ]
    tr[
        td[PSM]
        td[Product-Specific Model]
    ]
    tr[
        td[Query / View / Transition]
        td[Standardised language adapted by the Object Meta Group for model-to-model transformations]
    ]
    tr[
        td[QVT]
        td[See Query / View / Transition]
    ]
    tr[
        td[RAP]
        td[See Rich Ajax Platform]
    ]
    tr[
        td[RCP]
        td[See Rich Client Platform]
    ]
    tr[
        td[Reference implementation]
        td[Existing application of a software system family. Used in AC-MDSD for deriving the core concepts of a domain from the solution space.]
    ]
    tr[
        td[Rich Ajax Platform]
        td[Ajax port for SWT elements and other parts of the Rich Client Platform.]
    ]
    tr[
        td[Rich Client Platform]
        td[Generic application framework based on Eclipse. Allows the implementation of portable Java applications.]
    ]
]

section:GlossarySZ[S-Z]

table[
    tr[
        td[Term]
        td[Description]
    ]
    tr[
        td[SDK]
        td[Software Development Kit]
    ]
    tr[
        td[Smarty]
        td[Template engine used in Zikula for a strict separation of content and presentation.]
    ]
    tr[
        td[Software Engineering]
        td[Engineer discipline for systematic improvement of the quality of software systems.]
    ]
    tr[
        td[Software system family]
        td[Collection of several applications whose schematic code parts are based on the same architectural principles.]
    ]
    tr[
        td[SPL]
        td[Standard PHP Library]
    ]
    tr[
        td[Sub domain]
        td[Functional or technical partition of a domain which deals with the representation of specific aspects of a software system.]
    ]
    tr[
        td[SVN]
        td[Subversion]
    ]
    tr[
        td[SWT]
        td[Standard Widget Toolkit]
    ]
    tr[
        td[System use case]
        td[See Use case.]
    ]
    tr[
        td[Transformation]
        td[Modification of models leading to other models again or to source code.]
    ]
    tr[
        td[UML]
        td[See Unified Modeling Language]
    ]
    tr[
        td[Unified Modeling Language]
        td[Standardised language adapted by the Object Management Group for describing software systems with models. The UML works model-based.]
    ]
    tr[
        td[URI]
        td[Uniform Resource Identifier]
    ]
    tr[
        td[URL]
        td[Uniform Resource Locator]
    ]
    tr[
        td[Use case]
        td[An interaction offered by a software system.]
    ]
    tr[
        td[UUID]
        td[Universally Unique Identifier]
    ]
    tr[
        td[XMI]
        td[XML Metadata Interchange]
    ]
    tr[
        td[XML]
        td[Extensible Markup Language]
    ]
    tr[
        td[XML Metadata Interchange]
        td[XML-based file format for interoperable storage of models.]
    ]
    tr[
        td[XP]
        td[Extreme Programming]
    ]
    tr[
        td[XSD]
        td[XML Schema Definition]
    ]
]